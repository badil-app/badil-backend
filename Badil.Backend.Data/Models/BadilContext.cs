// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Badil.Backend.Data.Models;

public partial class BadilContext : DbContext
{
    public BadilContext(DbContextOptions<BadilContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Product> Products { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<UserReview> UserReviews { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Product>(entity =>
        {
            entity.HasKey(e => e.ProductId).HasName("PK__Product__B40CC6CD8783C814");

            entity.ToTable("Product");

            entity.HasIndex(e => e.Barcode, "IDX_Barcode").IsUnique();

            entity.Property(e => e.ProductId).ValueGeneratedNever();
            entity.Property(e => e.Barcode)
                .HasMaxLength(256)
                .IsUnicode(false);
            entity.Property(e => e.Brands)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Ingredients)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.NutriscoreGrade)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Title)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.Url)
                .IsRequired()
                .IsUnicode(false);

            entity.HasMany(d => d.AlternativeProducts).WithMany(p => p.Products)
                .UsingEntity<Dictionary<string, object>>(
                    "Badil",
                    r => r.HasOne<Product>().WithMany()
                        .HasForeignKey("AlternativeProductId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Badils__Alternat__04E4BC85"),
                    l => l.HasOne<Product>().WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Badils__ProductI__03F0984C"),
                    j =>
                    {
                        j.HasKey("ProductId", "AlternativeProductId").HasName("PK__Badils__B72E5D1229A49B65");
                        j.ToTable("Badils");
                    });

            entity.HasMany(d => d.Products).WithMany(p => p.AlternativeProducts)
                .UsingEntity<Dictionary<string, object>>(
                    "Badil",
                    r => r.HasOne<Product>().WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Badils__ProductI__03F0984C"),
                    l => l.HasOne<Product>().WithMany()
                        .HasForeignKey("AlternativeProductId")
                        .OnDelete(DeleteBehavior.ClientSetNull)
                        .HasConstraintName("FK__Badils__Alternat__04E4BC85"),
                    j =>
                    {
                        j.HasKey("ProductId", "AlternativeProductId").HasName("PK__Badils__B72E5D1229A49B65");
                        j.ToTable("Badils");
                    });
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__user__1788CC4C96018A89");

            entity.ToTable("user");

            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(256)
                .IsUnicode(false);
        });

        modelBuilder.Entity<UserReview>(entity =>
        {
            entity.HasKey(e => new { e.UserId, e.ProductId }).HasName("PK__User_Rev__DCC80020C645061F");

            entity.ToTable("User_Reviews");

            entity.HasOne(d => d.Product).WithMany(p => p.UserReviews)
                .HasForeignKey(d => d.ProductId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__User_Revi__Produ__00200768");

            entity.HasOne(d => d.User).WithMany(p => p.UserReviews)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__User_Revi__UserI__01142BA1");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}